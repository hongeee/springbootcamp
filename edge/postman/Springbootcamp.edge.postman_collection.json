{
	"info": {
		"_postman_id": "503bb8b4-c8de-4db9-bb88-64c8e2b61375",
		"name": "Springbootcamp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21657115"
	},
	"item": [
		{
			"name": "order",
			"item": [
				{
					"name": "createOrder",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.vroong.private.v1+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderer\": {\n    \"name\": \"소농민\",\n    \"phoneNumber\": \"010-0000-0000\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"receiver\": {\n    \"name\": \"박지성\",\n    \"phoneNumber\": \"010-0000-0001\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"orderLine\": {\n    \"data\": [\n      {\n        \"product\": {\n          \"productId\": 1,\n          \"name\": \"축구공\",\n          \"price\": 30000\n        },\n        \"quantity\": 2\n      },\n      {\n        \"product\": {\n          \"productId\": 1,\n          \"name\": \"호미\",\n          \"price\": 5000\n        },\n        \"quantity\": 3\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{orderUrl}}/api/orders",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "getOrderList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{orderUrl}}/api/orders?size=10&page=0",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						},
						"description": "List Albums"
					},
					"response": []
				},
				{
					"name": "getOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{orderUrl}}/api/orders/{{orderId}}",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "List Albums"
					},
					"response": []
				},
				{
					"name": "updateOrder",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderer\": {\n    \"name\": \"소농민\",\n    \"phoneNumber\": \"010-0000-0000\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"receiver\": {\n    \"name\": \"박지성\",\n    \"phoneNumber\": \"010-0000-0001\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"orderLine\": {\n    \"data\": [\n      {\n        \"product\": {\n          \"productId\": 1,\n          \"name\": \"축구공\",\n          \"price\": 30000\n        },\n        \"quantity\": 1\n      },\n      {\n        \"product\": {\n          \"productId\": 1,\n          \"name\": \"호미\",\n          \"price\": 5000\n        },\n        \"quantity\": 4\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{orderUrl}}/api/orders/{{orderId}}",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "cancelOrder",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{orderUrl}}/api/orders/{{orderId}}",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{orderUrl}}/management/health",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"management",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "info",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{orderUrl}}/management/info",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"management",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "payments",
			"item": [
				{
					"name": "checkout",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cardNumber\": \"1234-0000-0000-5678\",\n  \"orderId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{paymentUrl}}/api/payments",
							"host": [
								"{{paymentUrl}}"
							],
							"path": [
								"api",
								"payments"
							]
						},
						"description": "Checkout"
					},
					"response": []
				},
				{
					"name": "getPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{paymentUrl}}/api/payments/1",
							"host": [
								"{{paymentUrl}}"
							],
							"path": [
								"api",
								"payments",
								"1"
							]
						},
						"description": "Get payment"
					},
					"response": []
				},
				{
					"name": "health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{paymentUrl}}/management/health",
							"host": [
								"{{paymentUrl}}"
							],
							"path": [
								"management",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{orderId}}/management/info",
							"host": [
								"{{orderId}}"
							],
							"path": [
								"management",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "edge",
			"item": [
				{
					"name": "getOrderList",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{edgeUrl}}/bootcamp/orders?size=10&page=0",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"bootcamp",
								"orders"
							],
							"query": [
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listProducts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{edgeUrl}}/bootcamp/products?size=10&page=0",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"bootcamp",
								"products"
							],
							"query": [
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getOrderDetail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.vroong.private.v1+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{edgeUrl}}/bootcamp/order-detail/{{orderId}}",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"bootcamp",
								"order-detail",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createOrder",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();",
									"pm.environment.set('orderId', res.orderId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.vroong.private.v1+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderer\": {\n    \"name\": \"소농민\",\n    \"phoneNumber\": \"010-0000-0000\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"receiver\": {\n    \"name\": \"박지성\",\n    \"phoneNumber\": \"010-0000-0001\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"orderLine\": {\n    \"data\": [\n      {\n        \"product\": {\n          \"productId\": 1,\n          \"name\": \"축구공\",\n          \"price\": 30000\n        },\n        \"quantity\": 2\n      },\n      {\n        \"product\": {\n          \"productId\": 1,\n          \"name\": \"호미\",\n          \"price\": 5000\n        },\n        \"quantity\": 3\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edgeUrl}}/bootcamp/orders",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"bootcamp",
								"orders"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "cancelOrder",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();",
									"pm.environment.set('orderId', res.orderId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.vroong.private.v1+json"
							}
						],
						"url": {
							"raw": "{{edgeUrl}}/bootcamp/orders/{{orderId}}",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"bootcamp",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "updateOrder",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.vroong.private.v1+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderer\": {\n    \"name\": \"소농민\",\n    \"phoneNumber\": \"010-0000-0000\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"receiver\": {\n    \"name\": \"박지성\",\n    \"phoneNumber\": \"010-0000-0001\",\n    \"address\": \"영국 런던 어딘가\"\n  },\n  \"orderLine\": {\n    \"data\": [\n      {\n        \"product\": {\n          \"productId\": 5,\n          \"name\": \"축구공\",\n          \"price\": 30000\n        },\n        \"quantity\": 2\n      },\n      {\n        \"product\": {\n          \"productId\": 10,\n          \"name\": \"호미\",\n          \"price\": 5000\n        },\n        \"quantity\": 3\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edgeUrl}}/bootcamp/orders/{{orderId}}",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"bootcamp",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "checkout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.vroong.private.v1+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cardNumber\": \"1234-0000-0000-5678\",\n  \"orderId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edgeUrl}}/bootcamp/payments",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"bootcamp",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "health",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Functions",
									"",
									"/**",
									" * Calculate basicAuthString",
									" */",
									"function basicAuthString() {",
									"    let seed = CryptoJS.enc.Utf8.parse(pm.environment.get(\"client_id\") + \":\" + pm.environment.get(\"client_secret\"));",
									"    return CryptoJS.enc.Base64.stringify(seed);",
									"}",
									"",
									"/**",
									" * Generate an UUID v4",
									" * @see https://noritersand.github.io/javascript/2019/04/19/javascript-uuid-%EC%83%9D%EC%84%B1-%ED%95%A8%EC%88%98/",
									" */",
									"function uuidv4() {",
									"  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
									"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
									"    return v.toString(16);",
									"  });",
									"}",
									"",
									"/**",
									" * Calculate date value fo today",
									" * @var diff: int days to plus or minus",
									" * @return string e.g. \"2020-01-01\"",
									" */",
									"function today(diff) {",
									"    diff = parseInt(diff);",
									"    loop = Math.abs(diff);",
									"    let now = new Date();",
									"    if (diff !== undefined || diff !== 0) {",
									"        for (i = 0; i < loop; i++) {",
									"            (diff > 0) ",
									"                ? now.setDate(now.getDate() + 1) ",
									"                : now.setDate(now.getDate() - 1);",
									"        }",
									"    }",
									"    return now;",
									"}",
									"",
									"/**",
									" * Generate random string",
									" * ",
									" * @var len: int length of string",
									" */",
									"function randomString(len) {",
									"    return Math.random().toString(36).substring(len);",
									"}",
									"",
									"/**",
									" * Generate random number",
									" * @return int",
									" */",
									"function randomNumber() {",
									"    return parseInt(Math.random() * 100000);",
									"}",
									"",
									"/**",
									" * Calculate random double",
									" * ",
									" * min: int",
									" * max: int",
									" */",
									"function randomInRange(min, max) {",
									"    return Math.random() < 0.5 ",
									"        ? ((1-Math.random()) * (max-min) + min).toFixed(2) ",
									"        : (Math.random() * (max-min) + min).toFixed(2);",
									"}",
									"",
									"/**",
									" * Generate random location",
									" * @return object {",
									" *   @var lat: double ",
									" *   @var lng: double",
									" * }",
									" */",
									"function randomLocation() {",
									"    return {",
									"        lat: (Math.random() * (36.0 - 38.0) + 36.0).toFixed(6),",
									"        lng: (Math.random() * (126.0 - 128.0) + 126.0).toFixed(6)",
									"    };",
									"}",
									"",
									"// Declarations",
									"",
									"const address = {",
									"    postalCode: \"06193\",",
									"    baseAddress: \"서울 강남구 테헤란로 418\",",
									"    detailedAddress: \"13층\",",
									"    roadAddress: null,",
									"    jibunAddress: null,",
									"    lat: \"37.50510340\",",
									"    lng: \"127.05224580\"",
									"};",
									"",
									"pm.environment.set('address', JSON.stringify(address));",
									"pm.environment.set('randomDouble', randomInRange(1, 10));",
									"pm.environment.set(\"basicAuthString\", basicAuthString());",
									"pm.environment.set(\"uuid\", uuidv4());",
									"pm.environment.set('now', new Date().toISOString());",
									"pm.environment.set('today', today().toISOString().slice(0,10));",
									"pm.environment.set('yesterday', today(-1).toISOString().slice(0,10));",
									"pm.environment.set('dayBeforeYesterday', today(-2).toISOString().slice(0,10));",
									"pm.environment.set('randomString', randomString(7));",
									"pm.environment.set('randomDeviceId', randomString(16));",
									"pm.environment.set('randomFcmRegistrationId', randomString(16).toString(36).repeat(5));",
									"pm.environment.set('randomNumber', randomNumber());",
									"pm.environment.set('randomLat', randomLocation().lat);",
									"pm.environment.set('randomLng', randomLocation().lng);",
									"pm.environment.set('baseAddress', address.baseAddress);",
									"pm.environment.set('detailedAddress', address.detailedAddress);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{edgeUrl}}/management/health",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"management",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{edgeUrl}}/management/info",
							"host": [
								"{{edgeUrl}}"
							],
							"path": [
								"management",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "deliveries",
			"item": [
				{
					"name": "createDelivery",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();",
									"pm.environment.set('deliveryId', res.deliveryId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderId\": 123456,\n    \"sender\": {\n        \"name\": \"홍길동\",\n        \"phone\": \"01012345678\",\n        \"address\": \"서울 종로구 효자로 12\"\n    },\n    \"receiver\": {\n        \"name\": \"뽀로로\",\n        \"phone\": \"01098765432\",\n        \"address\": \"서울특별시 용산구 남산공원길 105\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{deliveryUrl}}/api/deliveries",
							"host": [
								"{{deliveryUrl}}"
							],
							"path": [
								"api",
								"deliveries"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "getDelivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{deliveryUrl}}/api/deliveries/{{deliveryId}}",
							"host": [
								"{{deliveryUrl}}"
							],
							"path": [
								"api",
								"deliveries",
								"{{deliveryId}}"
							]
						},
						"description": "List Albums"
					},
					"response": []
				},
				{
					"name": "updateDelivery",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sender\": {\n        \"name\": \"홍길동\",\n        \"phone\": \"01012345678\",\n        \"address\": \"서울 종로구 효자로 12\"\n    },\n    \"receiver\": {\n        \"name\": \"뽀로로\",\n        \"phone\": \"01098765432\",\n        \"address\": \"서울특별시 용산구 남산공원길 105\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{deliveryUrl}}/api/deliveries/{{deliveryId}}",
							"host": [
								"{{deliveryUrl}}"
							],
							"path": [
								"api",
								"deliveries",
								"{{deliveryId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "cancelDelivery",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{deliveryUrl}}/api/deliveries/{{deliveryId}}",
							"host": [
								"{{deliveryUrl}}"
							],
							"path": [
								"api",
								"deliveries",
								"{{deliveryId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{deliveryUrl}}/management/health",
							"host": [
								"{{deliveryUrl}}"
							],
							"path": [
								"management",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{deliveryUrl}}/management/info",
							"host": [
								"{{deliveryUrl}}"
							],
							"path": [
								"management",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "createProduct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": 1,\n    \"name\": \"카이엔\",\n    \"description\": \"주절주절\",\n    \"inventory\": 10,\n    \"price\": 500000000,\n    \"supplier\": \"포르쉐\",\n    \"size\": {\n        \"width\": 100,\n        \"height\": 200,\n        \"depth\": 300\n    },\n    \"location\": \"선릉 전시장\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{productUrl}}/api/products",
							"host": [
								"{{productUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "getProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{productUrl}}/api/products/1",
							"host": [
								"{{productUrl}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "List Albums"
					},
					"response": []
				},
				{
					"name": "updateProduct",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{contentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": 1,\n    \"name\": \"카이엔\",\n    \"description\": \"주절주절\",\n    \"inventory\": 10,\n    \"price\": 500000000,\n    \"supplier\": \"포르쉐\",\n    \"size\": {\n        \"width\": 100,\n        \"height\": 200,\n        \"depth\": 300\n    },\n    \"location\": \"선릉 전시장\"\n}\n"
						},
						"url": {
							"raw": "{{productUrl}}/api/products/1",
							"host": [
								"{{productUrl}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "cancelProduct",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{productUrl}}/api/deliveries/{{productId}}",
							"host": [
								"{{productUrl}}"
							],
							"path": [
								"api",
								"deliveries",
								"{{productId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "listProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{productUrl}}/api/products",
							"host": [
								"{{productUrl}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "q",
									"value": "",
									"description": "검색",
									"disabled": true
								},
								{
									"key": "size",
									"value": "",
									"disabled": true
								},
								{
									"key": "page",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{productUrl}}/management/health",
							"host": [
								"{{productUrl}}"
							],
							"path": [
								"management",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{productUrl}}/management/info",
							"host": [
								"{{productUrl}}"
							],
							"path": [
								"management",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "loginWithClientCredential",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();",
							"pm.environment.set('accessToken', res.access_token);",
							"pm.environment.set('refreshToken', res.refresh_token);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const seed = CryptoJS.enc.Utf8.parse(\"internal:internal\");",
							"const basicAuthString = CryptoJS.enc.Base64.stringify(seed);",
							"pm.environment.set(\"basicAuthString\", basicAuthString);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic {{basicAuthString}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{authHost}}/oauth/token",
					"host": [
						"{{authHost}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "loginWithPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();",
							"pm.environment.set('accessToken', res.access_token);",
							"pm.environment.set('refreshToken', res.refresh_token);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const seed = CryptoJS.enc.Utf8.parse(pm.environment.get(\"clientId\") + \":\" + pm.environment.get(\"clientSecret\"));",
							"const basicAuthString = CryptoJS.enc.Base64.stringify(seed);",
							"pm.environment.set(\"basicAuthString\", basicAuthString);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic {{basicAuthString}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text",
							"disabled": true
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "user",
							"type": "text"
						},
						{
							"key": "password",
							"value": "user",
							"type": "text"
						},
						{
							"key": "scopes",
							"value": "openid",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{authHost}}/oauth/token",
					"host": [
						"{{authHost}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}